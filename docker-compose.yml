
version: "3.7"
services:

  db:
    container_name: postgre_sql
    build: ./postgresql
    restart: always
    ports:
      - 50001:5432

  rabbit:
    container_name: rabbit_mq
    build: ./rabbit
    restart: always
    ports:
      - 50002:15672

  identity_srv:
    container_name: identity_srv
    build:
      context: ./
      dockerfile: Dockerfile.identity-srv
    restart: always
    depends_on:
      - db
    links:
      - db
    volumes:
      - /shop/src/identity-srv/src:/app/src/identity-srv/src
      - /shop/src/identity-srv/.env.production:/app/src/identity-srv/.env.production
      - /shop/src/identity-srv/package.json:/app/src/identity-srv/package.json
      - /shop/packages:/app/packages
      - /shop/package.json:/app/package.json
      - /shop/lerna.json:/app/lerna.json

  product_proxy:
    container_name: product_proxy
    build:
      context: ./
      dockerfile: Dockerfile.product-proxy
    restart: always
    depends_on:
      - db
      - rabbit
    links:
      - db
      - rabbit
    volumes:
      - /shop/src/product-proxy/src:/app/src/product-proxy/src
      - /shop/src/product-proxy/.env.production:/app/src/product-proxy/.env.production
      - /shop/src/product-proxy/package.json:/app/src/product-proxy/package.json
      - /shop/packages:/app/packages
      - /shop/package.json:/app/package.json
      - /shop/lerna.json:/app/lerna.json

  operation_proxy:
    container_name: operation_proxy
    build:
      context: ./
      dockerfile: Dockerfile.operation-proxy
    restart: always
    depends_on:
      - db
      - rabbit
    links:
      - db
      - rabbit
    volumes:
      - /shop/src/operation-proxy/src:/app/src/operation-proxy/src
      - /shop/src/operation-proxy/.env.production:/app/src/operation-proxy/.env.production
      - /shop/src/operation-proxy/package.json:/app/src/operation-proxy/package.json
      - /shop/packages:/app/packages
      - /shop/package.json:/app/package.json
      - /shop/lerna.json:/app/lerna.json

  admin_gw:
    container_name: admin_gw
    build:
      context: ./
      dockerfile: Dockerfile.admin-gw
    restart: always
    depends_on:
      - rabbit
      - product_proxy
      - identity_srv
      - operation_proxy
    links:
      - rabbit
      - product_proxy
      - identity_srv
      - operation_proxy
    volumes:
      - /shop/src/admin-gw/src:/app/src/admin-gw/src
      - /shop/src/admin-gw/.env.production:/app/src/admin-gw/.env.production
      - /shop/src/admin-gw/package.json:/app/src/admin-gw/package.json
      - /shop/packages:/app/packages
      - /shop/package.json:/app/package.json
      - /shop/lerna.json:/app/lerna.json

  showcase_gw:
    container_name: showcase_gw
    build:
      context: ./
      dockerfile: Dockerfile.showcase-gw
    restart: always
    depends_on:
      - rabbit
      - product_proxy
      - operation_proxy
    links:
      - rabbit
      - product_proxy
      - operation_proxy
    volumes:
      - /shop/src/showcase-gw/src:/app/src/showcase-gw/src
      - /shop/src/showcase-gw/.env.production:/app/src/showcase-gw/.env.production
      - /shop/src/showcase-gw/package.json:/app/src/showcase-gw/package.json
      - /shop/packages:/app/packages
      - /shop/package.json:/app/package.json
      - /shop/lerna.json:/app/lerna.json

  admin_ui:
    container_name: admin_ui
    build:
      context: ./
      dockerfile: Dockerfile.admin-ui
    restart: always
    depends_on:
      - admin_gw
    links:
      - admin_gw
    volumes:
      - /shop/src/admin-ui/nginx/conf.d:/etc/nginx/conf.d
    environment:
      - NODE_ENV=production

  showcase_ui:
    container_name: showcase_ui
    build:
      context: ./
      dockerfile: Dockerfile.showcase-ui
    restart: always
    depends_on:
      - showcase_gw
    links:
      - showcase_gw
    volumes:
      - /shop/src/showcase-ui/nginx/conf.d:/etc/nginx/conf.d
    environment:
      - NODE_ENV=production

  certbot:
    container_name: certbot
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - /shop/data/certbot/conf:/etc/letsencrypt:rw
      - /shop/data/certbot/www:/var/www/certbot:rw
    entrypoint: /bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'

  proxy:
    container_name: proxy
    build: ./nginx
    restart: unless-stopped
    depends_on:
      - admin_ui
      - showcase_ui
    links:
      - admin_ui
      - showcase_ui
    ports:
      - 80:80
      - 443:443
    volumes:
      - /shop/nginx/init-letsencrypt.sh:/etc/nginx/init-letsencrypt.sh
      - /shop/nginx/conf.d:/etc/nginx/conf.d
      - /shop/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /shop/data/certbot/conf:/etc/letsencrypt:ro
      - /shop/data/certbot/www:/var/www/certbot:ro
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
