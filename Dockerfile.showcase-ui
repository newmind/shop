
# BUILD APP
FROM node:11-alpine as ui

RUN npm config set package-lock false
RUN npm i yarn -g --yes

WORKDIR /app

COPY ./apps/showcase-ui/src              ./apps/showcase-ui/src
COPY ./apps/showcase-ui/public           ./apps/showcase-ui/public
COPY ./apps/showcase-ui/package.json     ./apps/showcase-ui
COPY ./apps/showcase-ui/.env.production  ./apps/showcase-ui
COPY ./shop.modules.packages             ./shop.modules.packages
COPY ./ui.packages                       ./ui.packages
COPY ./packages                          ./packages
COPY ./package.json                      .
COPY ./lerna.json                        .
COPY ./yarn.lock                         .

RUN yarn

# BUILD COMPONENTS
WORKDIR /app/ui.packages/dialog
RUN ["yarn", "run", "build"]

WORKDIR /app/ui.packages/cart
RUN ["yarn", "run", "build"]

WORKDIR /app/ui.packages/hocs
RUN ["yarn", "run", "build"]

WORKDIR /app/ui.packages/notifications
RUN ["yarn", "run", "build"]

WORKDIR /app/ui.packages/tabs
RUN ["yarn", "run", "build"]

WORKDIR /app/ui.packages/ui
RUN ["yarn", "run", "build"]

WORKDIR /app/ui.packages/yandex-map
RUN ["yarn", "run", "build"]

WORKDIR /app/ui.packages/confirm-order
RUN ["yarn", "run", "build"]

# BUILD MODULES
WORKDIR /app/shop.modules.packages/about
RUN ["yarn", "run", "build"]

WORKDIR /app/shop.modules.packages/corner
RUN ["yarn", "run", "build"]

WORKDIR /app/shop.modules.packages/main
RUN ["yarn", "run", "build"]

WORKDIR /app/shop.modules.packages/not-found
RUN ["yarn", "run", "build"]

WORKDIR /app/shop.modules.packages/order
RUN ["yarn", "run", "build"]

WORKDIR /app/shop.modules.packages/details-order
RUN ["yarn", "run", "build"]

WORKDIR /app/shop.modules.packages/produce
RUN ["yarn", "run", "build"]

WORKDIR /app/shop.modules.packages/product
RUN ["yarn", "run", "build"]

WORKDIR /app/shop.modules.packages/showcase
RUN ["yarn", "run", "build"]

# BUILD APPLICATION
WORKDIR /app/apps/showcase-ui
RUN ["yarn", "run", "build"]

# START NGINX
FROM nginx

COPY --from=ui /app/apps/showcase-ui/build /app

WORKDIR /etc/nginx

CMD ["nginx", "-g", "daemon off;"]
