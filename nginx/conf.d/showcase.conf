
upstream showcase {
    server showcase_ui;
}

upstream prerender {
    server prerender_srv;
}

server {

    listen 80;

    server_name xn--80aagcvgokokb0i.xn--p1ai www.xn--80aagcvgokokb0i.xn--p1ai;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {

    listen 443 ssl;

    server_name xn--80aagcvgokokb0i.xn--p1ai www.xn--80aagcvgokokb0i.xn--p1ai;

    ssl_certificate /etc/letsencrypt/live/xn--80aagcvgokokb0i.xn--p1ai/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/xn--80aagcvgokokb0i.xn--p1ai/privkey.pem;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    if ($host ~ '^www\.') { set $https_redirect 1; }
    if ($https_redirect = 1) { return 301 https://$host$request_uri; }

    location / {

        try_file $uri @prerender;
    }

    location @prerender {
        #proxy_set_header X-Prerender-Token YOUR_TOKEN;

        set $prerender 0;
        if ($http_user_agent ~* "googlebot|yahoo|bingbot|baiduspider|yandex|yeti|yodaobot|gigabot|ia_archiver|facebookexternalhit|twitterbot|developers\.google\.com") {
            set $prerender 1;
        }
        if ($args ~ "_escaped_fragment_|prerender=1") {
            set $prerender 1;
        }
        if ($http_user_agent ~ "Prerender") {
            set $prerender 0;
        }

        if ($prerender = 1) {
            proxy_pass                     http://prerender$request_uri;
        }
        if ($prerender = 0) {
            proxy_pass                     http://showcase$request_uri;
        }

        proxy_http_version                 1.1;
        proxy_cache_bypass                 $http_upgrade;

        proxy_set_header Upgrade           $http_upgrade;
        proxy_set_header Connection        "upgrade";
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-Port  $server_port;
    }
}
